[{"/Users/user/Desktop/Github/spotify-clone/client/src/index.js":"1","/Users/user/Desktop/Github/spotify-clone/client/src/App.js":"2","/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/Login.jsx":"3","/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/Signin/Signin.jsx":"4","/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/Signup/Signup.jsx":"5","/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/LoginTab/LoginTab.jsx":"6","/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/Navbar.jsx":"7","/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Main.jsx":"8","/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarOption/NavbarOption.jsx":"9","/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarPlaylist/NavbarPlaylist.jsx":"10","/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarPlaylist/NavbarPlaylistOptions/NavbarPlaylistOptions.jsx":"11","/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarAddPlaylist/NavbarAddPlaylist.jsx":"12","/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Search/Search.jsx":"13","/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Profile/Profile.jsx":"14","/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/Player.jsx":"15","/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/SongDetails/SongDetails.jsx":"16","/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/PlayerOptions/PlayerOptions.jsx":"17","/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/PlayerRight/PlayerRight.jsx":"18","/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Profile/Menu/Menu.jsx":"19","/Users/user/Desktop/Github/spotify-clone/client/src/components/api/index.js":"20","/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/SingleCard/SingleCard.jsx":"21"},{"size":220,"mtime":1612289710633,"results":"22","hashOfConfig":"23"},{"size":5806,"mtime":1612986604166,"results":"24","hashOfConfig":"23"},{"size":1404,"mtime":1612547473677,"results":"25","hashOfConfig":"23"},{"size":1274,"mtime":1612565376444,"results":"26","hashOfConfig":"23"},{"size":2083,"mtime":1612565458678,"results":"27","hashOfConfig":"23"},{"size":385,"mtime":1612392424811,"results":"28","hashOfConfig":"23"},{"size":4512,"mtime":1613159271821,"results":"29","hashOfConfig":"23"},{"size":2221,"mtime":1612891197098,"results":"30","hashOfConfig":"23"},{"size":512,"mtime":1612469614771,"results":"31","hashOfConfig":"23"},{"size":915,"mtime":1613159414506,"results":"32","hashOfConfig":"23"},{"size":491,"mtime":1612469812241,"results":"33","hashOfConfig":"23"},{"size":339,"mtime":1612465727077,"results":"34","hashOfConfig":"23"},{"size":983,"mtime":1612730609491,"results":"35","hashOfConfig":"23"},{"size":889,"mtime":1612585397465,"results":"36","hashOfConfig":"23"},{"size":414,"mtime":1612487116790,"results":"37","hashOfConfig":"23"},{"size":221,"mtime":1612486816891,"results":"38","hashOfConfig":"23"},{"size":662,"mtime":1612491691439,"results":"39","hashOfConfig":"23"},{"size":225,"mtime":1612487049429,"results":"40","hashOfConfig":"23"},{"size":247,"mtime":1612585448848,"results":"41","hashOfConfig":"23"},{"size":1242,"mtime":1612985224221,"results":"42","hashOfConfig":"23"},{"size":455,"mtime":1612668893178,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1upmzhe",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/user/Desktop/Github/spotify-clone/client/src/index.js",[],["88","89"],"/Users/user/Desktop/Github/spotify-clone/client/src/App.js",["90","91"],"import React, { createRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Login from './components/Login/Login';\nimport Navbar from './components/Navbar/Navbar';\nimport Main from './components/Main/Main';\nimport Player from './components/Player/Player';\nimport {fetchAlbums, searchQuery} from './components/api/';\n\nclass App extends React.Component{\n  state = {\n    loginActive:0,\n    id:0,\n    first:'',\n    last:'',\n    email:'',\n    password:'',\n    loggedin:false,\n    navbarActive:0,\n    activePage:'Home',\n    error:false,\n    errorMessage:'',\n    menuOpen:false,\n    trending:[],\n    search:null,\n    searchResults:[],\n    libraries:[]\n  }\n\n  async componentDidMount(){\n    const data = await fetchAlbums()\n    this.setState({\n      trending:data\n    })\n  }\n  \n  handleLoginChange = (index) => {\n    this.setState({\n      loginActive:index\n    })\n  }\n\n  handleNavbarChange = (index, title) => {\n    this.setState({\n      navbarActive:index,\n      activePage:title,\n    })\n  }\n\n  handleSignUp = (first, last, email, password) => {\n    this.setState({\n      first:first,\n      last,\n      email,\n      password\n    }, () => {\n      const newUser = {\n        first:this.state.first,\n        last:this.state.last,\n        email:this.state.email,\n        password:this.state.password\n      }\n      axios.get('http://localhost:5000/users', {params:{email:this.state.email}})\n      .then( res => {\n        if(res.data.rows.length > 0){\n          alert('Email Already Exists! Please Enter Different Email or Sign In!')\n        } else {\n          axios.post('http://localhost:5000/users', newUser)\n          .then(res => {\n            const defaultLibraries = ['Made For You', 'Recently Played', 'Liked Songs', 'Albums', 'Artists', 'Podcasts']\n            \n            defaultLibraries.map(library => {\n              const userLibrary = {\n                id:res.data.rows[0].id,\n                title:library\n                }\n                axios.post('http://localhost:5000/users/library/:id', userLibrary)\n                this.setState({\n                  id:res.data.rows[0].id\n                })\n            })\n            \n          })\n          alert(`New User With The Email: ${this.state.email} Has Been Registered! Thank You!`)\n          this.setState({\n            loginActive:0\n          })\n        }\n      })\n    })\n  }\n\n  handleSignIn = (email, password) => {\n    this.setState({\n      email,\n      password\n    }, () => {\n      axios.get('http://localhost:5000/users/details', {params:{email:this.state.email, password:this.state.password}})\n      .then(res => {\n        console.log(res.data)\n        if(res.data === false){\n          this.setState({\n            error:true,\n            errorMessage:'The Email and/or Password are Invalid! Please Try Again!'\n          })\n        } else {\n          this.setState({\n            id:res.data.id,\n            first:res.data.first,\n            last:res.data.last,\n            loggedin:true\n          })\n          alert(`Welcome Back ${this.state.first} ${this.state.last}`)\n        }\n      })\n     .then(async() => {\n       const libraries = await axios.get('http://localhost:5000/users/library/:id', {params:{id:this.state.id}})\n       .then((libraries) => {\n         console.log(libraries.data.rows)\n         this.setState({\n           libraries:libraries.data.rows\n         })\n       })\n     }) \n    })\n  }\n\n   handleSearch = (search) => {\n    this.setState({\n      search\n    }, async() => {\n      const searchData = await searchQuery(this.state.search)\n      this.setState({\n        searchResults:searchData.data,\n        navbarActive:null\n      }, () => {console.log(this.state.searchResults)})\n    })\n  }\n\n  handleOpenMenu = () => {\n    if(this.state.menuOpen){\n      this.setState({\n        menuOpen:false\n      })\n    }else {\n      this.setState({\n        menuOpen:true\n      })\n    }\n  }\n\n  handleSignOut = () => {\n    this.setState({\n      loginActive:0,\n      first:'',\n      last:'',\n      email:'',\n      password:'',\n      loggedin:false,\n      navbarActive:0,\n      activePage:'Home',\n      error:false,\n      errorMessage:'',\n      menuOpen:false,\n    })\n  }\n\n  domNodeRef = createRef();\n\nrender(){\n  return(\n    <div className=\"app\">\n      {/* SIGNIN SIGNUP SCREEN */}\n      {!this.state.loggedin && \n        <Login \n          handleLoginChange={this.handleLoginChange}\n          loginActive={this.state.loginActive}\n          handleSignUp={this.handleSignUp}\n          handleSignIn={this.handleSignIn}\n          errorMessage={this.state.errorMessage}/>\n      }\n\n      {/* LOGGEDIN MAIN SCREEN */}\n      {this.state.loggedin && \n        <div className=\"screen\" >\n          <div className=\"home\">\n            <div className=\"navbar\">\n            <Navbar \n              handleNavbarChange={this.handleNavbarChange}\n              navbarActive={this.state.navbarActive}\n              id={this.state.id}\n              libraries={this.state.libraries}\n              />\n            </div>\n            {/* <div ref={this.wrapper}> */}\n              <Main \n                header={this.state.activePage}\n                first={this.state.first}\n                last={this.state.last}\n                handleOpenMenu={this.handleOpenMenu}\n                menuOpen={this.state.menuOpen}\n                handleSignOut={this.handleSignOut}\n                trending={this.state.trending}\n                handleSearch={this.handleSearch}\n                search={this.state.search}\n                searchResults={this.state.searchResults}\n                navbarActive={this.state.navbarActive}\n                domNodeRef={this.domNodeRef}/>\n            {/* </div> */}\n          </div>\n          <div className=\"player\">\n            <Player />\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\n}\n\nexport default App;\n","/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/Login.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/Signin/Signin.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/Signup/Signup.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Login/LoginTab/LoginTab.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/Navbar.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Main.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarOption/NavbarOption.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarPlaylist/NavbarPlaylist.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarPlaylist/NavbarPlaylistOptions/NavbarPlaylistOptions.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Navbar/NavbarAddPlaylist/NavbarAddPlaylist.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Search/Search.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Profile/Profile.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/Player.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/SongDetails/SongDetails.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/PlayerOptions/PlayerOptions.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Player/PlayerRight/PlayerRight.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/Profile/Menu/Menu.jsx",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/api/index.js",[],"/Users/user/Desktop/Github/spotify-clone/client/src/components/Main/SingleCard/SingleCard.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":72,"column":42,"nodeType":"98","messageId":"99","endLine":72,"endColumn":44},{"ruleId":"100","severity":1,"message":"101","line":117,"column":14,"nodeType":"102","messageId":"103","endLine":117,"endColumn":23},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'libraries' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]